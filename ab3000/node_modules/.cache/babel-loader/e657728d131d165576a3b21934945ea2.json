{"ast":null,"code":"var _jsxFileName = \"/Users/sparkle968/Documents/GitHub/AB3000.github.io/ab3000/src/pages/professionalPage.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { professionalData } from \"../data/variables\";\nimport \"./professionalStyle.scss\"; //creates a timeline based on data from variables.js\n//Credits to Florin Pop for the tutorial!\n\nconst TimelineItem = ({\n  data\n}) => React.createElement(\"div\", {\n  className: \"timeline-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"timeline-item-content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"tag\",\n  style: {\n    background: data.category.color\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, data.category.tag), data.company && React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, data.company), data.position && React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Position: \", data.company), React.createElement(\"time\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, data.date), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, data.text), data.link && React.createElement(\"a\", {\n  href: data.link.url,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, data.link.text), data.secondLink && React.createElement(\"a\", {\n  href: data.secondLink.url,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, data.secondLink.text), React.createElement(\"span\", {\n  className: \"circle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}))); //check if at least one element in the array\n\n\nconst Timeline = () => professionalData.length > 0 && React.createElement(\"div\", {\n  className: \"timeline-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, professionalData.map((data, idx) => React.createElement(TimelineItem, {\n  data: data,\n  key: idx,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})));\n\nexport default class ProfessionalPage extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"page-container page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"home-page inner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"welcome-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Link, {\n      to: \"/hobbies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Hobbies\")))), React.createElement(Timeline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sparkle968/Documents/GitHub/AB3000.github.io/ab3000/src/pages/professionalPage.jsx"],"names":["React","Link","Button","professionalData","TimelineItem","data","background","category","color","tag","company","position","date","text","link","url","secondLink","Timeline","length","map","idx","ProfessionalPage","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,OAAO,0BAAP,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,KAAhB;AAAsB,EAAA,KAAK,EAAE;AAAEC,IAAAA,UAAU,EAAED,IAAI,CAACE,QAAL,CAAcC;AAA5B,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,IAAI,CAACE,QAAL,CAAcE,GADjB,CADF,EAIGJ,IAAI,CAACK,OAAL,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIL,IAAI,CAACK,OAAT,CAJnB,EAKGL,IAAI,CAACM,QAAL,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcN,IAAI,CAACK,OAAnB,CALpB,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOL,IAAI,CAACO,IAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIP,IAAI,CAACQ,IAAT,CAPF,EAQGR,IAAI,CAACS,IAAL,IACC;AAAG,EAAA,IAAI,EAAET,IAAI,CAACS,IAAL,CAAUC,GAAnB;AAAwB,EAAA,MAAM,EAAC,QAA/B;AAAwC,EAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGV,IAAI,CAACS,IAAL,CAAUD,IADb,CATJ,EAaGR,IAAI,CAACW,UAAL,IACC;AAAG,EAAA,IAAI,EAAEX,IAAI,CAACW,UAAL,CAAgBD,GAAzB;AAA8B,EAAA,MAAM,EAAC,QAArC;AAA8C,EAAA,GAAG,EAAC,qBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGV,IAAI,CAACW,UAAL,CAAgBH,IADnB,CAdJ,EAkBE;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAlBF,CADF,CADF,C,CAyBA;;;AACA,MAAMI,QAAQ,GAAG,MACfd,gBAAgB,CAACe,MAAjB,GAA0B,CAA1B,IACE;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGf,gBAAgB,CAACgB,GAAjB,CAAqB,CAACd,IAAD,EAAOe,GAAP,KACpB,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAEf,IAApB;AAA0B,EAAA,GAAG,EAAEe,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CAFJ;;AASA,eAAe,MAAMC,gBAAN,SAA+BrB,KAAK,CAACsB,SAArC,CAA+C;AAC5DC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAJF,CADF,CADF,EAWE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;;AAjB2D","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { professionalData } from \"../data/variables\";\n\nimport \"./professionalStyle.scss\";\n\n//creates a timeline based on data from variables.js\n//Credits to Florin Pop for the tutorial!\nconst TimelineItem = ({ data }) => (\n  <div className=\"timeline-item\">\n    <div className=\"timeline-item-content\">\n      <span className=\"tag\" style={{ background: data.category.color }}>\n        {data.category.tag}\n      </span>\n      {data.company && <p>{data.company}</p>}\n      {data.position && <p>Position: {data.company}</p>}\n      <time>{data.date}</time>\n      <p>{data.text}</p>\n      {data.link && (\n        <a href={data.link.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {data.link.text}\n        </a>\n      )}\n      {data.secondLink && (\n        <a href={data.secondLink.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {data.secondLink.text}\n        </a>\n      )}\n      <span className=\"circle\" />\n    </div>\n  </div>\n);\n\n//check if at least one element in the array\nconst Timeline = () =>\n  professionalData.length > 0 && (\n    <div className=\"timeline-container\">\n      {professionalData.map((data, idx) => (\n        <TimelineItem data={data} key={idx} />\n      ))}\n    </div>\n  );\n\nexport default class ProfessionalPage extends React.Component {\n  render() {\n    return (\n      <div className=\"page-container page\">\n        <div className=\"home-page inner-container\">\n          <div className=\"welcome-container\">\n            <Link to=\"/\">\n              <Button>Home</Button>\n            </Link>\n            <Link to=\"/hobbies\">\n              <Button>Hobbies</Button>\n            </Link>\n          </div>\n        </div>\n        <Timeline></Timeline>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}