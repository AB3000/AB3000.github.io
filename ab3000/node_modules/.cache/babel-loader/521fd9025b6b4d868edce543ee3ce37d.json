{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"react\", \"prop-types\", \"bootstrap-slider\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"react\"), require(\"prop-types\"), require(\"bootstrap-slider\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes, global.bootstrapSlider);\n    global.reactBootstrapSlider = mod.exports;\n  }\n})(this, function (_exports, _react, _propTypes, _bootstrapSlider) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = _exports.ReactBootstrapSlider = void 0;\n  _react = _interopRequireDefault(_react);\n  _propTypes = _interopRequireDefault(_propTypes);\n  _bootstrapSlider = _interopRequireDefault(_bootstrapSlider);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  class ReactBootstrapSlider extends _react.default.Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"checkAndDoDisabled\", () => {\n        const sliderEnable = this.props.disabled !== \"disabled\";\n        const currentlyEnabled = this.mySlider.isEnabled();\n\n        if (sliderEnable) {\n          if (!currentlyEnabled) {\n            this.mySlider.enable();\n          }\n        } else {\n          if (currentlyEnabled) {\n            this.mySlider.disable();\n          }\n        }\n      });\n\n      _defineProperty(this, \"updateSliderValues\", () => {\n        if (typeof this.props.min !== \"undefined\" && (typeof this.mySlider.min !== \"undefined\" || typeof this.mySlider.options.min !== \"undefined\")) {\n          this.mySlider.setAttribute(\"min\", this.props.min);\n        }\n\n        if (typeof this.props.max !== \"undefined\" && (typeof this.mySlider.max !== \"undefined\" || typeof this.mySlider.options.max !== \"undefined\")) {\n          this.mySlider.setAttribute(\"max\", this.props.max);\n        }\n\n        if (typeof this.props.step !== \"undefined\" && (typeof this.mySlider.step !== \"undefined\" || typeof this.mySlider.options.step !== \"undefined\")) {\n          this.mySlider.setAttribute(\"step\", this.props.step);\n        }\n\n        this.mySlider.setValue(this.props.value);\n        this.checkAndDoDisabled();\n      });\n    }\n\n    componentDidMount() {\n      const that = this;\n      const sliderAttributes = { ...this.props,\n        tooltip: this.props.tooltip || \"show\"\n      }; // console.log(\"sliderAttributes = \" + JSON.stringify(sliderAttributes, null, 4));\n\n      this.mySlider = new _bootstrapSlider.default(this.node, sliderAttributes); //     this.updateSliderValues();\n\n      if (this.props.change || this.props.handleChange) {\n        const changeEvent = this.props.change || this.props.handleChange;\n        this.mySlider.on(\"change\", e => {\n          const fakeEvent = {\n            target: {\n              value: e.newValue\n            }\n          };\n          changeEvent(fakeEvent);\n        });\n      }\n\n      if (this.props.slideStop) {\n        this.mySlider.on(\"slideStop\", e => {\n          const fakeEvent = {\n            target: {\n              value: e\n            }\n          };\n          that.props.slideStop(fakeEvent);\n        });\n      }\n\n      this.checkAndDoDisabled();\n    }\n\n    componentDidUpdate() {\n      this.updateSliderValues();\n    }\n\n    componentWillUnmount() {\n      this.mySlider.destroy();\n    }\n\n    render() {\n      // The slider\"s an input.  That\"s all we need.  We\"ll do the rest in\n      // the componentDidMount() method.\n      return _react.default.createElement(\"div\", {\n        ref: node => this.node = node\n      });\n    }\n\n  }\n\n  _exports.ReactBootstrapSlider = ReactBootstrapSlider;\n  ReactBootstrapSlider.propTypes = {\n    min: _propTypes.default.number,\n    max: _propTypes.default.number,\n    step: _propTypes.default.number,\n    value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number.isRequired).isRequired]).isRequired,\n    disabled: _propTypes.default.string,\n    tooltip: _propTypes.default.string,\n    change: _propTypes.default.func,\n    handleChange: _propTypes.default.func,\n    slideStop: _propTypes.default.func,\n    labelledby: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)])\n  };\n  var _default = ReactBootstrapSlider;\n  _exports.default = _default;\n});","map":null,"metadata":{},"sourceType":"script"}